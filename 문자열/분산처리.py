"""
1 6
3 7
6 2
7 100
9 635

1^6 : 1 -> 1번 컴퓨터
3^7 : 2187 -> 7번 컴퓨터
6^2 : 36 -> 6번 컴퓨터
7 ** 100 -> ...0001 1번 컴퓨터 식으로 분산 됨.

print(7**1000000) -> 시간이 오래 걸림.
규칙성을 찾는것이 관건이거 같다.

2의 제곱은 끝이 2,4,8,6 으로 반복한다.
3의 제곱은 끝이 3,9,7,1 으로 반복한다.
4의 제곱은 끝이 4,6,4,6 으로 반복한다.
5의 제곱은 끝은 5로 반복.
6의 제곱은 끝은 6으로 반복.
7 "           7,9,3,1
8 "           8,4,2,6
9 "           9,1,9,1
10 "          10
11            1
12            2,4,8,6
13            3,9,7,1
14            4,6,4,6

-> 여기서 숫자의 크기에 상관없이 끝에서 수를 기준으로 패턴이 일치함.
7^21 -> 21//4 -> 5, 21%4 -> 1
7^23124 -> 23124%4 -> 0 딱 떨어진 경우 마지막.
7^39322 -> 39322% -> 2
나머지로 패턴위치 확인.
"""
import sys

data_cnt = int(sys.stdin.readline())

for _ in range(data_cnt):
    a, b = map(int, sys.stdin.readline().split())

    # 4개가 하나의 패턴을 이룸,
    result = [(a ** i) % 10 for i in range(1, 5)][(b % 4) -1]
    print(result if result != 0 else 10)